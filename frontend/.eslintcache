[{"/home/phymat/experiment/frontend/src/App.js":"1","/home/phymat/experiment/frontend/src/components/signup/Signup.js":"2","/home/phymat/experiment/frontend/src/utils/RequireAuth.js":"3","/home/phymat/experiment/frontend/src/utils/Utils.js":"4","/home/phymat/experiment/frontend/src/components/Home.js":"5","/home/phymat/experiment/frontend/src/store/api/accounts.js":"6","/home/phymat/experiment/frontend/src/components/dashboard/Dashboard.js":"7","/home/phymat/experiment/frontend/src/components/login/Login.js":"8","/home/phymat/experiment/frontend/src/store/sagas/accounts.js":"9","/home/phymat/experiment/frontend/src/reportWebVitals.js":"10","/home/phymat/experiment/frontend/src/store/reducers/index.js":"11","/home/phymat/experiment/frontend/src/store/configureStore.js":"12","/home/phymat/experiment/frontend/src/store/sagas/index.js":"13","/home/phymat/experiment/frontend/src/store/actions/index.js":"14","/home/phymat/experiment/frontend/src/index.js":"15","/home/phymat/experiment/frontend/src/store/reducers/signup.js":"16","/home/phymat/experiment/frontend/src/store/sagas/signup.js":"17","/home/phymat/experiment/frontend/src/store/sagas/login.js":"18","/home/phymat/experiment/frontend/src/store/actions/login.js":"19","/home/phymat/experiment/frontend/src/store/reducers/client.js":"20","/home/phymat/experiment/frontend/src/components/notifications/Messages.js":"21","/home/phymat/experiment/frontend/src/store/actions/signup.js":"22","/home/phymat/experiment/frontend/src/store/reducers/login.js":"23","/home/phymat/experiment/frontend/src/store/actions/client.js":"24","/home/phymat/experiment/frontend/src/components/notifications/Errors.js":"25"},{"size":1045,"mtime":1609936289850,"results":"26","hashOfConfig":"27"},{"size":5071,"mtime":1609999561889,"results":"28","hashOfConfig":"27"},{"size":1528,"mtime":1610006748622,"results":"29","hashOfConfig":"27"},{"size":796,"mtime":1609817871636,"results":"30","hashOfConfig":"27"},{"size":461,"mtime":1610006704510,"results":"31","hashOfConfig":"27"},{"size":1376,"mtime":1609954798226,"results":"32","hashOfConfig":"27"},{"size":1477,"mtime":1609999807757,"results":"33","hashOfConfig":"27"},{"size":2923,"mtime":1609955275714,"results":"34","hashOfConfig":"27"},{"size":1786,"mtime":1609769910895,"results":"35","hashOfConfig":"27"},{"size":362,"mtime":1609318844959,"results":"36","hashOfConfig":"27"},{"size":387,"mtime":1609951134610,"results":"37","hashOfConfig":"27"},{"size":1024,"mtime":1610006542562,"results":"38","hashOfConfig":"27"},{"size":821,"mtime":1609955995575,"results":"39","hashOfConfig":"27"},{"size":490,"mtime":1609927044173,"results":"40","hashOfConfig":"27"},{"size":608,"mtime":1610006511782,"results":"41","hashOfConfig":"27"},{"size":1240,"mtime":1609955991879,"results":"42","hashOfConfig":"27"},{"size":828,"mtime":1609954935842,"results":"43","hashOfConfig":"27"},{"size":1624,"mtime":1609954002231,"results":"44","hashOfConfig":"27"},{"size":438,"mtime":1609932045361,"results":"45","hashOfConfig":"27"},{"size":577,"mtime":1609952705235,"results":"46","hashOfConfig":"27"},{"size":383,"mtime":1609939005029,"results":"47","hashOfConfig":"27"},{"size":442,"mtime":1609955993683,"results":"48","hashOfConfig":"27"},{"size":1074,"mtime":1609952042634,"results":"49","hashOfConfig":"27"},{"size":284,"mtime":1609933849643,"results":"50","hashOfConfig":"27"},{"size":351,"mtime":1609938591409,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"14kmfkl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},"/home/phymat/experiment/frontend/src/App.js",[],["117","118"],"/home/phymat/experiment/frontend/src/components/signup/Signup.js",["119"],"import React, { Component} from 'react'\nimport PropTypes from 'prop-types'; // ES6\nimport Messages from '../notifications/Messages';\nimport Errors from '../notifications/Errors';\n\nimport { Form, Grid, Header,  Input, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport {signupActions} from '../../store/actions/signup';\n\n\n\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: \"\",\n            username: '',\n          password: \"\"\n        };\n      }\n\n    onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n    onSubmit = () => {\n    this.props.signupRequest(this.state.email, this.state.username, this.state.password);\n  };\n\n    static propTypes = {\n        signupRequest: PropTypes.func,\n        signup: PropTypes.shape({\n            requesting: PropTypes.bool,\n            successful: PropTypes.bool,\n            messages: PropTypes.array,\n            errors: PropTypes.array,\n        }),\n    };\n\n\n\n    render() {\n        const {\n            signup: {\n                requesting,\n                successful,\n                messages,\n                errors,\n            },\n        } = this.props\n\n\n\n        return (\n            <div className=\"signup-form\">\n                <Grid textAlign='center' verticalAlign='middle'>\n                    <Grid.Column>\n                        <Header as='h2'\n                        textAlign='center'\n                        content=\"Sign up to create your account\">\n                        </Header>\n                        <Form size='large'>\n                            <Form.Group widths=\"equal\">\n                                <Form.Input fluid\n                                    icon=\"user\"\n                                    iconPosition=\"left\"\n                                    placeholder=\"First name\"\n                                  />\n                                  <Form.Input fluid\n                                    icon=\"user\"\n                                    iconPosition=\"left\"\n                                    placeholder=\"Last name\"\n                                  />\n                            </Form.Group>\n\n                            <Form.Input fluid \n                                icon=\"mail\"\n                                iconPosition=\"left\"\n                                name=\"email\"\n                                type=\"text\"\n                                placeholder=\"Email address\"\n                                onChange={this.onChange}\n                                className=\"email\">\n                            </Form.Input>\n\n                            <Form.Input fluid\n                                icon=\"user\"\n                                iconPosition=\"left\"\n                                name=\"username\"\n                                placeholder=\"Username\"\n                                type=\"text\"\n                                onChange={this.onChange}\n                                className=\"username\">\n                            </Form.Input>\n\n                            <Form.Input fluid\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                id=\"password\"\n                                className=\"password\"\n                                onChange={this.onChange}\n                                label=\"Password\" >\n                            </Form.Input>\n                            <Button onClick={this.onSubmit} \n                            content=\"SIGNUP\"\n                            type=\"submit\"\n                            size=\"large\"\n                            color=\"blue\">\n                            </Button>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n                <div className=\"auth-messages\">\n                      {!requesting && !!errors.length && (\n                        <Errors message=\"Failure to signup due to:\" errors={errors} />\n                      )}\n                      {!requesting && !!messages.length && (\n                        <Messages messages={messages} />\n                      )}\n                      {!requesting && successful && (\n                        <div>\n                          Signup Successful! <Link to=\"/login\">Click here to Login »</Link>\n                        </div>\n                      )}\n                                {!requesting && !successful && (\n                        <Link to=\"/login\">Already a Widgeter? Login Here »</Link>\n                      )}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    signup: state.signup,\n})\n\nconst signupRequest = signupActions.request\nexport default connect(mapStateToProps, {signupRequest})(withRouter(Signup))\n\n",["120","121"],"/home/phymat/experiment/frontend/src/utils/RequireAuth.js",["122"],"/home/phymat/experiment/frontend/src/utils/Utils.js",[],"/home/phymat/experiment/frontend/src/components/Home.js",[],"/home/phymat/experiment/frontend/src/store/api/accounts.js",["123"],"import axios from \"axios\";\nimport { setAxiosAuthToken, toastOnError } from \"../../utils/Utils\";\n\nconst BASE_URL = \"/api/v1/\";\n\nexport const login = async(email, password) => {\n    try {\n        const response = await axios.post(BASE_URL + \"token/login/\", {email, password})\n        return response.data\n    } catch(error) {\n        throw error\n    }\n}\n\nexport const getCurrentUser= async() => {\n    try{\n        const response = await axios.get(BASE_URL + \"users/me/\")\n        return response.data\n    } catch(error) {\n            throw error\n        }\n}\n\n\nexport const signupUser = async(email, username, password) => {\n    try {\n        const response = await axios.post(BASE_URL + 'users/', {email, username, password})\n        return response\n    } catch(error) {\n        throw error\n    }\n}\n\nexport const logout = async () => {\n    try{\n        const response = await axios.post(BASE_URL + \"token/logout/\")\n        return response.data\n    } catch(error) {\n            throw error\n        }\n}\n\n// helper functions //\nexport function setCurrentUser (userData) {\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n};\n\nexport function setToken(token){\n    setAxiosAuthToken(token);\n    localStorage.setItem(\"token\", token);\n}\n\nexport function unsetCurrentUser() {\n    setAxiosAuthToken(\"\")\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n}\n","/home/phymat/experiment/frontend/src/components/dashboard/Dashboard.js",["124"],"import React from 'react';\nimport {Icon, Image, Menu} from 'semantic-ui-react';\nimport logo from '../../assets/images/logo.jpg';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {logout} from '../../store/api/accounts';\n\n\n\nexport class Dashboard extends React.Component {\n    onLogout = () => {\n        this.props.logout();\n    };\n\n    render() {\n        return (\n            <div>\n                <Menu>\n                    <Menu.Item header className='logo'>\n                        <Link to='/dashboard/'><Image src={logo} size='tiny'></Image></Link>\n                    </Menu.Item>\n                    <Menu.Menu className='nav-container' position='right'>\n                        <Menu.Item>\n                            <p>User: <b>{localStorage.getItem('user')}</b></p>\n                        </Menu.Item>\n                        <Menu.Item>\n                            <Link onClick={this.onLogout}>Logout</Link>\n                        </Menu.Item>\n                    </Menu.Menu>\n                </Menu>\n                <div>\n                    <h1>Dashboard</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    client: state.client\n});\n\nexport default connect(mapStateToProps, {\n    logout\n})(withRouter(Dashboard));\n\n\n",["125","126"],"/home/phymat/experiment/frontend/src/components/login/Login.js",[],"/home/phymat/experiment/frontend/src/store/sagas/accounts.js",["127","128","129","130"],"import {login, getCurrentUser, logout} from '../api/accounts';\nimport { call, put, takeLatest} from 'redux-saga/effects';\nimport {SET_TOKEN, SET_CURRENT_USER, UNSET_CURRENT_USER, LOGIN, LOGOUT} from '../actions/accounts';\nimport {push} from 'connected-react-router';\nimport { setAxiosAuthToken, toastOnError } from \"../../utils/Utils\";\n\nexport function* loginWorker(action) {\n    const {userData, redirectTo} = action\n    const { response, auth_token, error } = yield call(login, userData, redirectTo)\n    if (response) {\n        setToken(auth_token)\n        const { user, error} = yield call(getCurrentUser, redirectTo)\n        if (error) {\n            unsetCurrentUser()\n        } else {\n            setCurrentUser(user, redirectTo)\n        }\n    } else {\n        unsetCurrentUser()\n    }\n}\n\nexport function* logoutWorker() {\n    const { response, error } = yield call(logout)\n    if (response) {\n        unsetCurrentUser()\n        yield call(push, '/')\n    } else {\n        unsetCurrentUser()\n    }\n}\n\nexport function* watchLogin() {\n    yield takeLatest(LOGIN, loginWorker)\n}\nexport function* watchLogout() {\n    yield takeLatest(LOGOUT, logoutWorker)\n}\n\n\n// helper functions //\nfunction* setCurrentUser (user, redirectTo) {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    yield put({\n        type: SET_CURRENT_USER,\n        payload: user\n    });\n\n    if (redirectTo != \"\") {\n        yield call(push, redirectTo)\n    }\n};\n\nfunction* setToken(token){\n    setAxiosAuthToken(token);\n    localStorage.setItem(\"token\", token);\n    yield put({\n        type: SET_TOKEN,\n        payload: token\n    })\n}\n\nfunction* unsetCurrentUser() {\n    setAxiosAuthToken(\"\")\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n    yield put({type: UNSET_CURRENT_USER})\n}\n",["131","132"],"/home/phymat/experiment/frontend/src/reportWebVitals.js",[],"/home/phymat/experiment/frontend/src/store/reducers/index.js",[],"/home/phymat/experiment/frontend/src/store/configureStore.js",[],"/home/phymat/experiment/frontend/src/store/sagas/index.js",[],"/home/phymat/experiment/frontend/src/store/actions/index.js",[],["133","134"],"/home/phymat/experiment/frontend/src/index.js",[],"/home/phymat/experiment/frontend/src/store/reducers/signup.js",[],"/home/phymat/experiment/frontend/src/store/sagas/signup.js",[],"/home/phymat/experiment/frontend/src/store/sagas/login.js",["135","136","137","138","139"],"import { take, fork, cancel, call, put, cancelled } from 'redux-saga/effects'\nimport { setAxiosAuthToken, toastOnError } from \"../../utils/Utils\";\nimport {push} from 'connected-react-router';\n\nimport * as loginActions from '../actions/login';\nimport * as clientActions from '../actions/client';\nimport * as api from '../api/accounts';\nimport {fetchEntity} from './index';\nimport {REQUEST, FAILURE} from '../actions/index';\n\nfunction* loginFlow(email, password) {\n    try {\n        const token = yield call(api.login, email, password)\n        const {auth_token} = token;\n        api.setToken(auth_token)\n        yield put(clientActions.clientActions.set(auth_token))\n        const usernameEmail = yield call(api.getCurrentUser)\n        api.setCurrentUser(usernameEmail)\n\n        yield put(loginActions.loginActions.success(auth_token))\n\n        yield put(push('/dashboard'))\n\n    } catch(error) {\n        yield put(loginActions.loginActions.failure(error))\n    } finally {\n        if (yield cancelled()) {\n            yield put(push('/login'))\n        }\n    }\n}\n\nfunction* logout() {\n    yield put(clientActions.clientActions.unset())\n    api.unsetCurrentUser()\n    yield put(push('/'))\n}\n\nfunction* loginWatcher() {\n\n    while(true) {\n        const {email, password, redirectTo}= yield take(loginActions.LOGIN[REQUEST])\n        const task = yield fork(loginFlow, email, password)\n        const action = yield take([clientActions.CLIENT_UNSET, loginActions.LOGIN[FAILURE]])\n        if (action.type == clientActions.CLIENT_UNSET)\n            yield cancel(task)\n        yield call(logout)\n    }\n}\n\nexport default loginWatcher\n\n","/home/phymat/experiment/frontend/src/store/actions/login.js",[],"/home/phymat/experiment/frontend/src/store/reducers/client.js",["140","141","142"],"import * as clientActions from '../actions/client';\nimport {REQUEST, SUCCESS, FAILURE} from '../actions/index';\n\nconst initialState= {\n    token: null,\n    isAuthenticated: false\n};\n\nconst reducer = function clientReducer (state = initialState, action) {\n  switch (action.type) {\n    case clientActions.CLIENT_SET:\n      return {\n        token: action.token,\n          isAuthenticated: true\n      }\n\n    case clientActions.CLIENT_UNSET:\n      return {\n        token: null,\n          isAuthenticated: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","/home/phymat/experiment/frontend/src/components/notifications/Messages.js",["143"],"import React from 'react'\nimport PropTypes from 'prop-types';\n\n// Iterate over each message object and print them\n// in an unordered list\nconst Messages = (props) => {\n  const { messages } = props\n  return (\n    <div>\n      <ul>\n        {messages.map(message => (\n          <li key={message.time}>{message.body}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Messages\n",["144","145"],"/home/phymat/experiment/frontend/src/store/actions/signup.js",[],"/home/phymat/experiment/frontend/src/store/reducers/login.js",[],"/home/phymat/experiment/frontend/src/store/actions/client.js",["146"],"import {createAction, createRequestTypes} from './index';\n\nexport const CLIENT_SET = 'CLIENT_SET'  \nexport const CLIENT_UNSET = 'CLIENT_UNSET'  \n\nexport const clientActions = {\n    set: (token) => createAction(CLIENT_SET, {token}),\n    unset: () => createAction(CLIENT_UNSET, {}),\n}\n\n","/home/phymat/experiment/frontend/src/components/notifications/Errors.js",["147"],"import React, { PropTypes } from 'react'\n\n// Iterate over each error object and print them\n// in an unordered list\nconst Errors = (props) => {\n  const { errors } = props\n  return (\n    <div>\n      <ul>\n        {errors.map(errors => (\n          <li key={errors.time}>{errors.body}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n\nexport default Errors\n\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":6,"column":31,"nodeType":"154","messageId":"155","endLine":6,"endColumn":36},{"ruleId":"148","replacedBy":"156"},{"ruleId":"150","replacedBy":"157"},{"ruleId":"152","severity":1,"message":"158","line":5,"column":13,"nodeType":"154","messageId":"155","endLine":5,"endColumn":26},{"ruleId":"152","severity":1,"message":"159","line":2,"column":29,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"160","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","replacedBy":"162"},{"ruleId":"152","severity":1,"message":"159","line":5,"column":29,"nodeType":"154","messageId":"155","endLine":5,"endColumn":41},{"ruleId":"152","severity":1,"message":"163","line":9,"column":35,"nodeType":"154","messageId":"155","endLine":9,"endColumn":40},{"ruleId":"152","severity":1,"message":"163","line":24,"column":23,"nodeType":"154","messageId":"155","endLine":24,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":49,"column":20,"nodeType":"166","messageId":"167","endLine":49,"endColumn":22},{"ruleId":"148","replacedBy":"168"},{"ruleId":"150","replacedBy":"169"},{"ruleId":"148","replacedBy":"170"},{"ruleId":"150","replacedBy":"171"},{"ruleId":"152","severity":1,"message":"172","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":27},{"ruleId":"152","severity":1,"message":"159","line":2,"column":29,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"173","line":8,"column":9,"nodeType":"154","messageId":"155","endLine":8,"endColumn":20},{"ruleId":"152","severity":1,"message":"174","line":42,"column":33,"nodeType":"154","messageId":"155","endLine":42,"endColumn":43},{"ruleId":"164","severity":1,"message":"175","line":45,"column":25,"nodeType":"166","messageId":"167","endLine":45,"endColumn":27},{"ruleId":"152","severity":1,"message":"176","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"177","line":2,"column":18,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"178","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":34},{"ruleId":"152","severity":1,"message":"179","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":17},{"ruleId":"148","replacedBy":"180"},{"ruleId":"150","replacedBy":"181"},{"ruleId":"152","severity":1,"message":"182","line":1,"column":23,"nodeType":"154","messageId":"155","endLine":1,"endColumn":41},{"ruleId":"152","severity":1,"message":"179","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar",["183"],["184"],"'clientActions' is defined but never used.","'toastOnError' is defined but never used.","'Icon' is defined but never used.",["183"],["184"],"'error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["183"],["184"],["183"],["184"],"'setAxiosAuthToken' is defined but never used.","'fetchEntity' is defined but never used.","'redirectTo' is assigned a value but never used.","Expected '===' and instead saw '=='.","'REQUEST' is defined but never used.","'SUCCESS' is defined but never used.","'FAILURE' is defined but never used.","'PropTypes' is defined but never used.",["183"],["184"],"'createRequestTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]